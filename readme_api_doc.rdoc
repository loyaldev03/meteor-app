
<h2>How we handle authentication </h2>
Authentication is handled using the "api\_key" argument on each API call. This api\_key is the authentication token of the agent that is commiting the request. If the agent is not allowed, we will stop processing the request, and proceed to return a message telling that the agent is not authorized. Have in mind that this "api\_token" is reseted on every login, and can be obtained using token's POST api method. <a href="TokensController.html">TokensMethods</a>

<h2>Error codes </h2>
We always answer with an string variable called "code". Acording to the method result we will set this "code" variable in order to match the result. (We are answering "000" for success, and with an especific value for each kind of error).

<h2>Requests and response </h2>
Every method receives a common HTTP request (GET, POST or PUT), and it returns a json response. Within each method description, you can see that there is an example with curl of a success call to the method.

<h2>Validations </h2>
Within each method call, me make some validations before processing the request, just to make sre to work with clean data. In case there is a field with invalid data, the system will let you know about it. 