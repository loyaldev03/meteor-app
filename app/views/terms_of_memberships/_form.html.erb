<% if @tom.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(@tom.errors.count, "error") %> founded:</h2>
    <ul>
      <% @tom.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
  <br>
<% end %>
<% # First step %>
<div class="step" id="first">
  <div class="control-group"><%= wizard_steps_indicator(1) %></div>
  <div class="control-group">
    <%= f.label :name, t('activerecord.attributes.terms_of_membership.wizard.plan_name'), :class => 'control-label required_asterisk', :style => "width:auto" %>
    <div class="controls">
      <%= f.text_field :name, :class => 'text_field required', required: true %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.plan_name'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.plan_name_help') } %> 
    </div>
  </div>
  <div class="control-group">
    <%= f.label :api_role, t('activerecord.attributes.terms_of_membership.wizard.external_code'), :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :api_role, :value => @tom.api_role, :class => 'text_field input-small' %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.external_code'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.external_code_help') } %> 
    </div>
  </div>
  <div class="control-group">
    <%= f.label :description, t('activerecord.attributes.terms_of_membership.wizard.description'), :class => 'control-label' %>
    <div class="controls">
      <%= f.text_area :description, :class => 'text_area', :rows => 5 %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.description'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.description_help') } %> 
    </div>
  </div>
</div>

<% # Second step %>
<div class="step" id="second">  
  <div class="control-group"><%= wizard_steps_indicator(2) %></div>
  
<!--   <div class="control-group">
    <%= label_tag 'initial_fee_amount', t('activerecord.attributes.terms_of_membership.wizard.initial_fee_amount'), :class => 'control-label' %>
    <div class="controls">
      $&nbsp;<%= text_field_tag 'initial_fee_amount', @tom.initial_fee, :class => 'text_field input-small required', :placeholder => '0', :type => 'number' %>
    </div>
  </div> -->

  <div class="control-group" id="needs_enrollment_approval_group">
    <%= label_tag 'needs_enrollment_approval', t('activerecord.attributes.terms_of_membership.wizard.needs_enrollment_approval'), :class => 'control-label' %>
    <div class="controls">
      <%= f.check_box 'needs_enrollment_approval' %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.needs_enrollment_approval'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.needs_enrollment_approval_help') } %> 
    </div>
  </div>

  <div class="control-group">
    <%= label_tag 'trial_period_amount', t('activerecord.attributes.terms_of_membership.wizard.trial_period'), :class => 'control-label required_asterisk' %>
    <div class="controls">
<!--       $&nbsp;<%= text_field_tag 'trial_period_amount', @tom.trial_period_amount, :class => 'text_field input-small required', :placeholder => '0', :type => 'number' %> -->
      <%= t('activerecord.attributes.terms_of_membership.wizard.lasting') %>
      <%= text_field_tag 'trial_period_lasting', @tom.provisional_days, :class => 'text_field input-small required', :placeholder => '0', :type => 'number', :min => 0 %>
      <%= select_for_date_span("trial_period_lasting_time_span") %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.trial_period'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.trial_period_help') } %> 
    </div>
  </div>

  <div class="control-group">
    <%= label_tag 'is_payment_expected', t('activerecord.attributes.terms_of_membership.wizard.at_the_end_of_trial'), :class => 'control-label required_asterisk' %>
    <div class="controls">
      <%= radio_button_tag 'is_payment_expected', 'yes', ((@tom.is_payment_expected == true unless !@tom.is_payment_expected) or true), :class => 'required' %>
      <%= t('activerecord.attributes.terms_of_membership.wizard.payment_is_expected') %>&nbsp;
       <%= radio_button_tag 'is_payment_expected', 'no', @tom.is_payment_expected == false %>
      <%= t('activerecord.attributes.terms_of_membership.wizard.no_pay_is_expected') %>&nbsp;
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.at_the_end_of_trial'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.at_the_end_of_trial_help') } %>
    </div>
  </div>

  <div class='row span12' style='margin-left:-30px !important;'>
    <div class="control-group span" id="recurring_amount_amount" >
      <%= label_tag 'recurring_amount', t('activerecord.attributes.terms_of_membership.wizard.recurring_amount'), :class => 'control-label required_asterisk' %>
      <div class="controls">
        $&nbsp;<%= text_field_tag 'installment_amount', @tom.installment_amount, :class => 'text_field input-small required', :placeholder => '0', :type => 'number' %> 
      </div>
    </div>

    <div class="control-group" id="recurring_amount_days">
      <div class="controls">
        <%= t('activerecord.attributes.terms_of_membership.wizard.every') %>
        <%= text_field_tag 'installment_amount_days', @tom.installment_period, :class => 'text_field input-small required', :placeholder => '0', :type => 'number', :min => 1 %>
        <%= select_for_date_span("installment_amount_days_time_span") %>
        <%= render :partial => "shared/help", :locals => { 
          :title => t('activerecord.attributes.terms_of_membership.wizard.recurring_amount'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.recurring_amount_help') } %>
      </div>
    </div>
  </div>

  <div class="control-group">
    <%= label_tag 'subscription_terms', t('activerecord.attributes.terms_of_membership.wizard.subscription_terms'), :class => 'control-label required_asterisk' %>
    <div class="controls">
      <%= radio_button_tag 'subscription_terms', 'until_cancelled', ((@tom.subscription_limits == 0 unless !@tom.subscription_limits) or true), :class => 'required' %>
      <span id="label_for_until_cancelled"><%= t('activerecord.attributes.terms_of_membership.wizard.bill_until_cancelled') %></span>
      <br /><br />
<!--       <%= radio_button_tag 'subscription_terms', 'stop_cancel_after', (@tom.subscription_limits > 0 unless !@tom.subscription_limits) %>
      <span id="label_for_stop_billing_after"><%= t('activerecord.attributes.terms_of_membership.wizard.stop_billing_after') %></span>
      <%= text_field_tag 'subscription_terms_stop_billing_after', @tom.subscription_limits, :class => 'text_field input-small', :placeholder => '0', :type => 'number' %>
      <%= select_for_date_span("subscription_terms_stop_billing_after_time_span") %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.subscription_terms'), 
        :content => t('lorem') } %>  -->
    </div>
  </div>

  <div class="control-group">
    <%= label_tag 'initial_club_cash_amount', t('activerecord.attributes.terms_of_membership.wizard.initial_club_cash_amount'), :class => 'control-label required_asterisk' %>
    <div class="controls">
      <%= f.text_field 'initial_club_cash_amount', :class => 'text_field input-small', :type => 'number', :min => 0 %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.initial_club_cash_amount'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.initial_club_cash_amount_help') } %> 
    </div>
  </div>

  <div class="control-group" id="club_cash_installment">
    <%= label_tag 'club_cash_installment_amount', t('activerecord.attributes.terms_of_membership.wizard.club_cash_installment_amount'), :class => 'control-label required_asterisk' %>
    <div class="controls">
      <%= f.text_field 'club_cash_installment_amount', :class => 'text_field input-small', :type => 'number', :placeholder => '0.0', :min => 0 %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.club_cash_installment_amount'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.club_cash_installment_amount_help') } %> 
      <%= t('activerecord.attributes.terms_of_membership.wizard.skip_first_club_cash') %>
      <%= f.check_box 'skip_first_club_cash' %>
    </div>
  </div>
</div>

<% # Third step %>
<div class="step" id="third">
  <div class="control-group"><%= wizard_steps_indicator(3) %></div>
  <div class="control-group" id="if_cannot_bill_user_options">
    <%= label_tag 'if_cannot_bill_user', t('activerecord.attributes.terms_of_membership.wizard.if_cannot_bill_user_then'), :class => 'control-label' %>
    <div class="controls">
      <%= radio_button_tag 'if_cannot_bill_user', 'cancel', ((@tom.if_cannot_bill == 'cancel' unless !@tom.if_cannot_bill) or true), :class => 'required' %>&nbsp;
      <%= t('activerecord.attributes.terms_of_membership.wizard.cancel') %>
      <br /><br />
<!--       <%= radio_button_tag 'if_cannot_bill_user', 'suspend', @tom.if_cannot_bill == 'suspend' %>&nbsp;
      <%= t('activerecord.attributes.terms_of_membership.wizard.suspend_for') %>
      <%= text_field_tag 'if_cannot_bill_user_suspend_for', @tom.suspension_period, :class => 'text_field input-small', :placeholder => '0', :type => 'number' %>
      <%= select_for_date_span("if_cannot_bill_user_suspend_for_time_span") %>
      <br /><br />
 -->      <%= radio_button_tag 'if_cannot_bill_user', 'downgrade_to', @tom.if_cannot_bill == 'downgrade_tom' %>&nbsp;
      <%= t('activerecord.attributes.terms_of_membership.wizard.downgrade_to') %>
      <%= select_for_toms('downgrade_to_tom', @tom.downgrade_tom_id, @tom) %>
      <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.downgrade_to'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.downgrade_to_help') } %> 
    </div>
  </div>
  <div class='row span12' style='margin-left:-30px !important;'>
    <div class="control-group span" id="upgrade_options">
      <%= label_tag 'upgrade_to_tom', t('activerecord.attributes.terms_of_membership.wizard.upgrade_to'), :class => 'control-label' %>
      <div class="controls">
        <%= select_for_toms('upgrade_to_tom', @tom.upgrade_tom_id, @tom) %>&nbsp; 
      </div>
    </div> 
    <div class="control-group">
      <div class="controls">
        <%= t('activerecord.attributes.terms_of_membership.wizard.after') %>      
        <%= text_field_tag 'upgrade_to_tom_days', @tom.upgrade_tom_period, :class => 'text_field input-small', :placeholder => '0', :type => 'number', :min => 1 %>
        <%= select_for_date_span("upgrade_to_tom_days_time_span") %>
        <%= render :partial => "shared/help", :locals => { 
        :title => t('activerecord.attributes.terms_of_membership.wizard.upgrade_to'), 
        :content => t('activerecord.attributes.terms_of_membership.wizard.upgrade_to_help') } %>
      </div>
    </div>
  </div>

  <div id="no_configuration_message" style="display:none">
    <%= t('activerecord.attributes.terms_of_membership.wizard.no_downgrade_upgrade_configuration') %>
  </div>
</div>

<div id="" class="form-actions">
  <%= link_to t("helpers.links.cancel"), terms_of_memberships_path, id: 'cancel_button', :class => 'btn', data: {:confirm => t('activerecord.attributes.terms_of_membership.wizard.cancel_button_caption')} %>
  <div style = "float: right;">
    <%= f.submit "clear", :id => 'back', :class => 'btn', :type => "reset" %>
    <%= f.submit nil, :id => 'next', :class => 'btn btn-primary' %>
  </div>
</div>

<script type="text/javascript">
  // Second Step  
  function until_cancel_logic(){
    $('#subscription_terms_stop_billing_after').removeAttr('required');
    $('#subscription_terms_stop_billing_after').prop('disabled',true);
    $('#subscription_terms_stop_billing_after_time_span').removeAttr('required');
    $('#subscription_terms_stop_billing_after_time_span').prop('disabled',true);    
  }

  $('#is_payment_expected_yes').click(function() {
    window.atTheEndOfTheTrial = "payment";
    select_payment_is_expected();
    update_labels();
  });

  $('#is_payment_expected_no').click(function() {
    window.atTheEndOfTheTrial = "no payment";
    select_payment_is_not_expected();
    update_labels();
  });

  $('#subscription_terms_until_cancelled').click(function() {
    until_cancel_logic();
  });

  $('#subscription_terms_stop_cancel_after').click(function() {
    $('#subscription_terms_stop_billing_after').prop('required', true);
    $('#subscription_terms_stop_billing_after').removeAttr('disabled');
    $('#subscription_terms_stop_billing_after_time_span').prop('required', true);
    $('#subscription_terms_stop_billing_after_time_span').removeAttr('disabled');
  });

  // Third Step

  function cancel_radio_logic(){
    $('#if_cannot_bill_user_suspend_for').removeAttr('required');
    $('#downgrade_to_tom').removeAttr('required');
    $('#if_cannot_bill_user_suspend_for').prop('disabled', true);
    $('#if_cannot_bill_user_suspend_for_time_span').prop('disabled', true);
    $('#downgrade_to_tom').prop('disabled', true);
  }

  function suspend_radio_logic(){
    $('#if_cannot_bill_user_suspend_for').prop('required', true);
    $('#downgrade_to_tom').removeAttr('required');
    $('#if_cannot_bill_user_suspend_for').prop('disabled', false);
    $('#if_cannot_bill_user_suspend_for_time_span').prop('disabled', false);
    $('#downgrade_to_tom').prop('disabled', true);   
  }

  function downgrade_radio_logic(){    
    $('#if_cannot_bill_user_suspend_for').removeAttr('required');
    $('#downgrade_to_tom').prop('required', true);
    $('#if_cannot_bill_user_suspend_for').prop('disabled', true);
    $('#if_cannot_bill_user_suspend_for_time_span').prop('disabled', true);
    $('#downgrade_to_tom').prop('disabled', false);  
  }

  function select_upgrade_logic_disable(){
    $('#upgrade_to_tom_days').prop('disabled', true);          
    $('#upgrade_to_tom_days').removeAttr('required');
    $('#upgrade_to_tom_days_time_span').prop('disabled', true);          
    $('#upgrade_to_tom_days_time_span').removeAttr('required');
  }

  function select_upgrade_logic_enable(){
    $('#upgrade_to_tom_days').prop('disabled', false);          
    $('#upgrade_to_tom_days').prop('required', true);
    $('#upgrade_to_tom_days_time_span').prop('disabled', false);          
    $('#upgrade_to_tom_days_time_span').prop('required', true);
  }

  function select_payment_is_expected(){
    $('#recurring_amount_amount').show('fast');
    $('#recurring_amount_days').show('fast');
    $('#club_cash_installment').show('fast');
    $('#installment_amount').prop('required', true);
    $('#installment_amount_days').prop('required', true);
    $('#club_cash_installment_amount').prop('required', true);
  }

  function select_payment_is_not_expected(){
    $('#recurring_amount_amount').hide('fast');
    $('#recurring_amount_days').hide('fast');
    $('#club_cash_installment').hide('fast');
    $('#installment_amount').removeAttr('required');
    $('#installment_amount_days').removeAttr('required');
    $('#club_cash_installment_amount').removeAttr('required');
  }

  $('#if_cannot_bill_user_cancel').click(function() {
    cancel_radio_logic();
  });

  $('#if_cannot_bill_user_suspend').click(function() {
    suspend_radio_logic();
  });

  $('#if_cannot_bill_user_downgrade_to').click(function() {
    downgrade_radio_logic();
  });

  $('#upgrade_to_tom').on('change', function() {
    if($('#upgrade_to_tom').val() != '') {
      select_upgrade_logic_enable();
    } else {
      select_upgrade_logic_disable();  
    }
  });

  function update_labels() {
    var radio1Text = 'NOT_SET';
    var radio2Text = 'NOT_SET';
    if (window.atTheEndOfTheTrial == 'payment') {
      radio1Text = '<%= t('activerecord.attributes.terms_of_membership.wizard.bill_until_cancelled') %>';
      radio2Text = '<%= t('activerecord.attributes.terms_of_membership.wizard.stop_billing_after') %>';
    }
    else if (window.atTheEndOfTheTrial == 'no payment') {
      radio1Text = '<%= t('activerecord.attributes.terms_of_membership.wizard.keep_active_until_manually_cancelled') %>';
      radio2Text = '<%= t('activerecord.attributes.terms_of_membership.wizard.cancel_user_after') %>';
    }
    $('#label_for_until_cancelled').html(radio1Text);
    $('#label_for_stop_billing_after').html(radio2Text);
  }

  function set_button_next_label(currentStep) {
    var isSubmitButton = false;
    var buttonText = 'NOT_SET';
    switch(currentStep) {
      case "first":
        <% if controller.action_name == 'new' %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_1_button_next') %>';
        <% else %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_1_edit_button_next') %>';
        <% end %>
        break;
      case "second":
        <% if controller.action_name == 'new' %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_2_button_next') %>';
        <% else %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_2_edit_button_next') %>';
        <% end %>
        break;
      case "third":
        isSubmitButton = true;
        <% if controller.action_name == 'new' %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_3_button_next') %>';
        <% else %>
          buttonText = '<%= t('activerecord.attributes.terms_of_membership.wizard.step_3_edit_button_next') %>';
        <% end %>
        break;
    }
    if(isSubmitButton) {  
      $("#tom_wizard_form").formwizard("option", {textSubmit: buttonText});
    }
    else {
      $("#tom_wizard_form").formwizard("option", {textNext: buttonText});
    }
  }

  $(function() {
    $("#tom_wizard_form").bind("before_step_shown", function(event, data) {
      set_button_next_label(data.currentStep);
    });

    $("#tom_wizard_form").bind("step_shown", function(event, data){
      currentStep = $("#tom_wizard_form").formwizard("state").currentStep;
      switch(currentStep) {
        case "second":
          if ($("#subscription_terms_until_cancelled").is(":checked") ){ 
            until_cancel_logic(); 
          }
          if ($('#is_payment_expected_yes').is(':checked')) {
            window.atTheEndOfTheTrial = "payment";
            select_payment_is_expected();
            update_labels();
          } else {
            window.atTheEndOfTheTrial = "no payment";
            select_payment_is_not_expected();
            update_labels();
          }
          break;
        case "third":
          if ($('#is_payment_expected_yes').is(':checked')) {
            $('#if_cannot_bill_user_options').show();
            $('#upgrade_options').show();
            $('#no_configuration_message').hide('fast');
          } else {
            $('#if_cannot_bill_user_options').hide('fast');
            $('#upgrade_options').hide('fast');
            $('#no_configuration_message').show();
          }
          
          if( $("#if_cannot_bill_user_cancel").is(":checked") ){ 
            cancel_radio_logic(); 
          }
          else if( $("#if_cannot_bill_user_suspend").is(":checked") ){ 
            suspend_radio_logic(); 
          }
          else if( $("#if_cannot_bill_user_downgrade_to").is(":checked") ){ 
            downgrade_radio_logic();
          }

          if( $("#upgrade_to_tom").val() == "" ){ 
            select_upgrade_logic_disable(); 
          }
          break;
      }
    });

    $('.form-actions').on('confirm:complete', '#cancel_button', function(event){
      window.location.href = $(this).attr('href');
    });


    new_tom_functions();
    set_button_next_label($("#tom_wizard_form").formwizard("state").currentStep);
    window.atTheEndOfTheTrial = "payment";
  });
</script>